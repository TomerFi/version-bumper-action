---
name: Pull request build

on:
  pull_request_target:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint project
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Lint sources
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_DOCKERFILE: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_MARKDOWN: true
          VALIDATE_SHELL_SHFMT: true
          VALIDATE_YAML: true

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    name: Test the action
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.3.4

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create initial testing repository
        run: |
          mkdir ${{ env.GITHUB_WORKSPACE }}/tmprep
          cd ${{ env.GITHUB_WORKSPACE }}/tmprep
          git init
          echo "blabla" > file
          git add file.txt
          git commit -m "build: initial commit"
          git tag -m "1.2.3" 1.2.3

      - name: Add commit of type fix
        run: |
          echo "blabla" > fix_file
          git add fix_file
          git commit -m "fix: fixed something"

      - name: Run local action
        id: patch_bumper
        uses: ${{ env.GITHUB_WORKSPACE }}

      - name: Verify patch bump
        if: |
          ${{ steps.patch_bumper.outputs.new_version != '1.2.4' ||
              steps.patch_bumper.outputs.next_dev_iteration != '1.2.5.dev' }}
        uses: actions/github-script@v4.1.0
        with:
          script: core.setFailed('patch bump not working correctly')

      - name: Add commit of type feat
        run: |
          echo "blabla" > feat_file
          git add feat_file
          git commit -m "feat: added a new feature"

      - name: Run local action
        id: minor_bumper
        uses: ${{ env.GITHUB_WORKSPACE }}

      - name: Verify minor bump
        if: |
          ${{ steps.minor_bumper.outputs.new_version != '1.3.0' ||
              steps.minor_bumper.outputs.next_dev_iteration != '1.3.1.dev' }}
        uses: actions/github-script@v4.1.0
        with:
          script: core.setFailed('minor bump not working correctly')

      - name: Add breaking commit
        run: |
          echo "blabla" > breaking_file
          git add breaking_file
          git commit -m "refactor: refactor some stuff\n\nBREAKING broke some stuff"

      - name: Run local action
        id: major_bumper
        uses: ${{ env.GITHUB_WORKSPACE }}

      - name: Verify major bump
        if: |
          ${{ steps.major_bumper.outputs.new_version != '2.0.0' ||
              steps.major_bumper.outputs.next_dev_iteration != '2.0.1.dev' }}
        uses: actions/github-script@v4.1.0
        with:
          script: core.setFailed('major bump not working correctly')

      - name: Cleanup
        if: always()
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: rm -rf ${{ env.GITHUB_WORKSPACE }}/tmprep
